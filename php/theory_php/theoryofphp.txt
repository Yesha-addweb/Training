Syntax Of Php:-
			->	Php Script can place anywhere in document.
			->	Its starts with <? and close with ?>.
			->	The extention of the php file is ".php".
			->	Php file normally contains HTML file and PHP scripting code.
			->	Example:-
						<?php
							// PHP CODE WILL EXSICUTE OVER HERE
						?>
			->	echo statement is use to write a text or to print any statement.
			->	Example:- 
						<?php
							echo "HELLO WORLD";
						?>
			->	comments in php should be in two ways:-
				1. Single line (//)
				2. Multiple line(/* */)

Variables of Php:-
			->	The variables in php were declare with the sign of dolar($).
			-> 	Example:- 
						<?php
							$a = "HELLO!!";
							$x = 5;

							echo $a;
							echo "<br>";
							echo $x;
						?>
				Output will be :-
									HELLO!!
									5

			->	In the text value compulsory to put quotes around them. 
			->	Variable have a short name like x and y.
			->	& it also have the full name like age, car_name etc...
			->	Variable starts with the letters or underscore character.
			->	variable cannot starts with the numbers
			->	It only contain alpha-numeric character and underscores (A-z, 0-9, _ )
			->	It is case-sensitive ($age and $AGE both are different variable).

Echo and Print Statements:-
			->	In php there are two way to get output:-
				1.	echo
				2.	print
			->	echo and print both are same and both are use to give ouptup of the 		program.
			->	Difference of echo and print:-
				- echo has no return value where print has return value 1 so it is use 	  as an expressions.
				- echo will take multiple parameters where print take only one argument.
				- echo is more faster the print.

			1. Echo :-
					->	echo can be used with or without parentheses:- echo or echo().

			2. Print :-
					->	print can be also used with or without parentheses:- print or 		print().

Data Types:-	
			->	Variable will store data of different types and different data types 		can do different things.
			->	Php supports the following data types:-
				1.	String
						- A string is a sequence of characters.
						- A string can be any text inside quotes user can use single or double quote.
				2.	Integer
						- It must have at least one digit.
						- It does not have a decimal point.
						- It can be either positive or negative.
						- It can be specified in 3 format:-
							1. Decimal(10)	2. Hexadecimal(16)	3. Octal(8)
				3.	Float (it is also called as double)
						- It is a number with a decimal point.
				4.	Boolean
						- It represent 2 possible states:-
							1. TRUE	2. FALSE
				5.	Array
						- It stores multiple values in one single variable.
				6.	Object
						- It is a data type which stores data and information.
						- An object must be explicitly declared.
						- First we must declare a class of object. 
						- We use the class keyword. 
						- A class is a structure that can contain properties and 		  methods.
				7.	Null
						- It only have one value which is NULL.
						- A variable of data type NULL is a variable that has no value 	  assigned to it.
						- If a variable doesn't asign a value then it automatically 	  take the null value.
				8.	Resource
						- It is not an actual data type.

Strings:-
			->	String Length:	
					- In PHP strlen() function returns the length of a string.
			->	String Count Word:
					- In PHP str_word_count() function counts the number of words in a 	 string.
			->	String Reverse:
					- In PHP strrev() function reverses a string
			->	Search For a Specific Text Within a String:
					- In PHP strpos() function searches for a specific text within a 	string.
					- If a match is found, the function returns the character position 	 of the first match. If no match is found, it will return FALSE.
			->	Replace Text Within a String:
					- In PHP str_replace() function replaces some characters with some 	 other characters in a string.		

Constants:-
			->	It is an identifier for a simple value. The value cannot be change 		during the script.
			->	A valid constant starts with a letter or underscore.
			->  To create a constant define() function is used.
			Syntax:-	define(name, value, case-insensitive)
			parameter: name -> Specifies the name of constant
					   value -> Specifies the value of constant
					   case-insensitive -> Specifies Whether the constant name should 					  be case-insensitive. Default is false.
			->	Constant are Global.
			->	Constants are automatically global and can be used across the entire 	 script.	

Operators:-
			->	It is used to perform operations on variables and values.
			->	There are many operations which are as below:-
				1.	Arithmetic operator
						- It is used as 
							Addition(+), 
							Subtraction(-), 
							Multiplication(*), 
							Division(/), 
							Modulus(%), 
							Exponentiation(**)
				2.	Assignment operator
						- The basic assignment operator in PHP is "=". It means that 	the left operand gets set to the value of the assignment 	   expression on the right.
						- It is used as 
							Addition(+=), 
							Subtraction(-=),
						  	Multiplication(*=), 
						  	Division(/=), 
						  	Modulus(%=)
				3.	Comparsion operator
						- It is used as
							Equal(==),
							Identical(===),
							Not Equal(!=),
							Not Equal(<>),
							Not Identical(!=),
							Greter than(>),
							Less than(<),
							Greter than or Equal to(>=),
							Less than or Equal to(<=)
				4.	Increment/Decrement operator
						- It is used as
							Pre-increment(++$x)
							Pre-decrement(--$x)
							Post-increment($x++)
							Post-decrement($x--)
				5.	Logical operator
						- It is used as
							And(and)
							Or(or)
							XOR(xor)
							And(&&)
							Or(||)
							Not(!)
				6.	String operator
						- It is used as
							Concatenation(.)
							Concatenation assignment(.=)
				7.	Array operator 
						- Union(+)
						- Equality(==)
						- Identity(===)
						- Inequality(!=)
						- Inequality(<>)
						- Non-identity(!==)  

If...Else...Elseif Statements:-
			1.	if statement - executes some code if one condition is true
			2.	if...else statement - executes some code if a condition is true and 	another code if that condition is false
			3.	if...elseif....else statement - executes different codes for more than 	   two conditions 
			4.	switch statement - selects one of many blocks of code 	to be executed.		

			-> If:-	
				Syntax:
					if (condition) {
    					//code to be executed if condition is true;
					}

			-> If..Else:-
				Syntax:
					if (condition) {
    					//code to be executed if condition is true;
					} else {
    					//code to be executed if condition is false;
					}

			-> If..Elseif..Else:-
				Syntax:
					if (condition) {
					    //code to be executed if this condition is true;
					} elseif (condition) {
					    //code to be executed if this condition is true;
					} else {
					    //code to be executed if all conditions are false;
					}

			-> Switch:-
				Syntax:	
					switch (n) {
					    case label1:
					        //code to be executed if n=label1;
					        break;
					    case label2:
					        //code to be executed if n=label2;
					        break;
					    case label3:
					        //code to be executed if n=label3;
					        break;
					    ...
					    default:
					        //code to be executed if n is different from all labels;
					}

Loops:-
			->	If the user want the same block of code to run the program over and 	over again in a row. instead of writing the same line again and again 	  for that loops are important and it make your program very easy.
			->	There are 4 type of loops are there which are as below:-
				1.	While
				2.	Do..While
				3.	For
				4.	Foreach

			1.	While:-	
					-	The while loop executes a block of code as long as the 			specified condition is true.	
					-	Syntax:
							while (condition is true) {
							    //code to be executed;
							}
					- 	In while first the condition will check if the condition will 	  true then it will execute the program other wise it will not 		execute if the condition will false.
			2.	Do..While:-
					-	The do...while loop will always execute the block of code 		once, it will then check the condition, and repeat the loop 	while the specified condition is true.
					-	Syntax:
							do {
							    //code to be executed;
							} while (condition is true);
					-	In Do..While loop first the program will execute and after 		that it will check the condition.
			3.	For:-	
					-	The for loop is used when you know in advance how many times 	 the script should run.
					-	Syntax:	
							for (init counter; test counter; increment counter) {
							    //code to be executed;
							}
					-	In For loop init counter is used as to initialize the counter 	  value, test counter is used as to evaluated for each loop 		iteration. If it evaluates to TRUE, the loop continues. If it 	  evaluates to FALSE, the loop ends and increment counter is 		used as increases the loop counter value.
			4. Foreach:-
					-	The foreach loop works only on arrays, and is used to loop 		through each key/value pair in an array.
					-	Syntax:
							foreach ($array as $value) {
							    //code to be executed;
							}

Functions:-
			->	php has more than 1000 built-in functions.
			->	besides the built-in functions we can create our own functions.
			->	functions is a block of statements which is used repeatedly in a 		program.
			->	it will not execute immediately on page load.
			->	it will execute when a funtion is called.
			->	THE FUNCTION DECLARATION IS START FROM "function".
			->	Syntax:
					function functionName() {
					    //code to be executed;
					}
			->	function should have a proper name so it reflects that what function 	 does.

			FUNCTION ARGUMENTS:-
			->	function is passed through arguments.
			-> 	An argument is just like a variable.
			-> 	Arguments are specified after the function name, inside the 			parentheses.
			->	You can add many arguments just seprated with comma.

Global Variables:-
			->	In Server which variable are predefine is known as Global variable.
			->	It means that they are always accessible, regardless of scope - and 	you can access them from any function, class or file without having to 	   do anything special.
			->	Global Variables are as below:-
				1.	$GLOBALS
				2.	$_SERVER
				3.	$_POST
				4.	$_GET
				5.	$_REQUEST
				6.	$_FILES
				7.	$_ENV
				8.	$_COOKIE
				9.	$_SESSION

Array:-
			->	Array stores multiple values in one single variable.
			->	Syntax:
					array();
			->  There are 3 types of array:-
				1.	Indexed Array - array with a numeric index
				2.	Associative Array - array with named key
				3.	Multidimentional Array - array can contain 1 or more arrays
			1. Indexed Array:-
					There are 2 ways to use indexed array.
					-> $fruits = array("mango", "banana", "kiwi");
					-> $fruits[0] = "mango";
					   $fruits[1] = "banana";
					   $fruits[2] = "kiwi";
					-  To count the array for that below Syntax will apply.
						<?php
							$fruits = array("mango", "banana", "kiwi");
							echo count($cars);
						?>
			2. Associative Array:-
					->	Associative arrays are arrays that use named keys that you 		assign to them.
 					There are 2 ways to use Associative Array.
 					->	$age = array("Peter"=>"35", "Dharati"=>"22", "Mansi"=>"25");
 					->	$age['Peter'] = "35";
 						$age['Dharati'] = "22";
 						$age['Mansi'] = "25";

Multidimentional Array:-
			->	Multidimensional array is an array containing one or more arrays.
			->	Php understands multidimensional arrays that are 2,3,4, or many more 	 level deep.Arrays are hard to manage if they are more than 3 level 		deep.

Sorting Array:-
			->	The elements in an array can be sorted in alphabetical or numerical 	order, descending or ascending.
			->	PHP - Sort Functions For Arrays:
				1.	sort() - sort arrays in ascending order
				2.	rsort() - sort arrays in descending order
				3.	asort() - sort associative arrays in ascending order, according to 				 the value
				4.	ksort() - sort associative arrays in ascending order, according to 				 the key
				5.	arsort() - sort associative arrays in descending order, according 				 to the value
				6.	krsort() - sort associative arrays in descending order, according 				 to the key

File Handling:-
			->	File handling is an important part of any web application. You often 	 need to open and process a file for different tasks.
			->	php has several functions for creating, reading, uploading and editing 	   files.
			->	Function readfile():
					The readfile() function reads a file and writes it to the output buffer.

Date and Time:-	
			->	The php date() funtion is used to format a date and a time.
			->	Syntax:
					date(format,timestamp);
			Get a simple date:-
				There are some characters that are commonly used for dates:
					1.	D = D stands for Day (1-31)
					2.	M = M stands for Month (1-12)
					3.	Y = Y stands for Year (in four digits)
					4.	l(lowercase 'L') = Represent the day of the week

				Other characters, like"/", ".", or "-" can also be inserted between the characters to add additional formatting. 
			Get a simple time:-
				There are some characters that are commonly used for times:
					1.	h = h - 12-hour format of an hour with leading zeros (01 to 12)
					2.	i - Minutes with leading zeros (00 to 59)
					3.  s - Seconds with leading zeros (00 to 59)
					4.	a - Lowercase Ante meridiem and Post meridiem (am or pm)
			Get Your Time Zone:-
				->	If the time you got back from the code is not the right time, it's 	   probably because your server is in another country or set up for a 	  different timezone.

				->	So, if you need the time to be correct according to a specific 		location, you can set a timezone to use.
			Create a Date With PHP mktime():-
				->	The optional timestamp parameter in the date() function specifies 	  a timestamp.
				->	If the user will not use timestamp then the current date will be 	 used. 
				->	The mktime()function returns the Unix timestamp for a date.
				->	The Unix timestamp contains the number of seconds between the Unix 	   Epoch (January 1 1970 00:00:00 GMT) and the time specified.
				Syntax:
					mktime(hour,minute,second,month,day,year)
			Create a Date From a String With PHP strtotime():-
				->	In PHP strtotime() function is used to convert a human readable 	string to a Unix time.
				Syntax:
					strtotime(time,now)

Cookie:-
			->	A cookie is used to identify user.
			->	A cookie is a small file that the server embeds on user computer.
			->	Each time same computer will request for a page with a browser, and it 	   will send the cookie too.
			->	With the help of php you can create and retrieve cookie value.
			Create Cookies With PHP:
				->	A cookie is created with the setcookie() function.
			Syntax:
				setcookie(name, value, expire, path, domain, secure, httponly);

Session:-
			->	Session is a way to store information to be used across multiple pages.
			->	A session is started with the session_start() function.
			->	Session variables are set with the PHP global variable: $_SESSION.

Error Handling:-
			->	Error handling in php is very simple.
			->	An error message with file name, line number and a message describe 	the error which is set to the browser.
			->	when user create a script and web application so the error handling is 	   most important part.
			There are different error handling method:
				1.	Simple die() statement.
				2.	Custom error and error triggers.
				3.	Error reporting.
		Set Error Handling:-
			->	The default error handler for PHP is the built in error handler. We 	are going to make the function above the default error handler for the 	   duration of the script.
			->  It is possible to change the error handler to apply for only some 		errors, that way the script can handle different errors in different 	 ways.
			Syntax:
				
				set_error_handler("customError");

			-	Since we want our custom function to handle all errors, the 			set_error_handler() only needed one parameter, a second parameter 		could be added to specify an error level.
		Trigger an Error:-
			->	In a script where users can input data it is useful to trigger errors 	  when an illegal input occurs. In PHP, this is done by the 				trigger_error() function.
		Error Logging:-
			->		error_log()

Exception Handling:-
			->	Exceptions are used to change the normal flow of a script if a 			specified error occurs.
			->	Exception handling is used to change the normal flow of the code 		execution if a specified error (exceptional) condition occurs. This 	condition is called an exception.
			We will show different error handling methods:

				1. Basic use of Exceptions
				2. Creating a custom exception handler
				3. Multiple exceptions
				4. Re-throwing an exception
				5. Setting a top level exception handler
			1. Basic use of Exceptions:
				-	When an exception is thrown, the code following it will not be 		executed, and PHP will try to find the matching "catch" block.
				-	If an exception is not caught, a fatal error will be issued with 	 an "Uncaught Exception" message.

				Try, throw and catch:-

					->	try  -	A function using an exception should be in a "try" 			  	block. If the exception does not trigger, the code 				will continue as normal. However if the exception 				triggers, an exception is "thrown".
					->	throw -	Each "throw" must have at least one "catch".
					->	catch -	A "catch" block retrieves an exception and creates an 			  object containing the exception information.
			2.	Creating a Custom Exception Class:
				-	To create a custom exception handler you must create a special 		class with functions that can be called when an exception occurs 	 in PHP. The class must be an extension of the exception class.
				-	The custom exception class inherits the properties from PHP's 		exception class and you can add custom functions to it.
			3.	Multiple exceptions:
				-	It is possible for a script to use multiple exceptions to check 	for multiple conditions.
				-	It is possible to use several if..else blocks, a switch, or nest 	 multiple exceptions.
			4.	Re-throwing an exception:
				-	Sometimes, when an exception is thrown, you may wish to handle it 	  differently than the standard way. It is possible to throw an 		exception a second time within a "catch" block.
				-	A script should hide system errors from users. System errors may 	 be important for the coder, but are of no interest to the user.
			5.	Setting a top level exception handler:
				-	The set_exception_handler() function sets a user-defined function 	  to handle all uncaught exceptions

MYSQL DATABASE:-
			->	You can connect to and manipulate database.
			->	MYSQL is most popular database system used with php.
				-	MySQL is a database system used on the web
				-	MySQL is a database system that runs on a server
				-	MySQL is ideal for both small and large applications
				-	MySQL is very fast, reliable, and easy to use
				-	MySQL uses standard SQL
				-	MySQL compiles on a number of platforms
				-	MySQL is free to download and use
				-	MySQL is developed, distributed, and supported by Oracle 			Corporation
				-	MySQL is named after co-founder Monty Widenius's daughter: My
			->	The data in a MySQL database are stored in tables. A table is a 		collection of related data, and it consists of columns and rows.

			Database Queries:
				-	A query is a question or a request.
				-	We can set query for database specific information and have a 		recordset returned.
				SELECT * from TABLE_NAME

Connection of MySQL & PHP:-
			
Create Table:-
			->	A database table has its own unique name and consists of columns and 	 rows.
			->	The CREATE TABLE statement is used to create a table in MySQL.